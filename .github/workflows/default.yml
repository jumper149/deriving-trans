name: "Default"
on:
  push:
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flag-exceptions:
          [ true
          , false
          ]
        flag-mtl:
          [ true
          , false
          ]
        flag-primitive:
          [ true
          , false
          ]
        flag-random:
          [ true
          , false
          ]
        flag-resourcet:
          [ true
          , false
          ]
        flag-unliftio:
          [ true
          , false
          ]
        output:
          [ packages.x86_64-linux.default
          , devShells.x86_64-linux.default
          ]
    steps:
    - name: "Set up GitHub Actions"
      uses: actions/checkout@v3.0.2
    - name: "Set up Nix"
      uses: cachix/install-nix-action@v17
    - name: "Set up Cachix"
      uses: cachix/cachix-action@v12
      with:
        name: jumper149-deriving-trans
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "Set Cabal flags"
      run: |
        sed --expression='s/^  "exceptions" = true;$/  "exceptions" = ${{ matrix.flag-exceptions }};/g' --in-place flags.nix
        sed --expression='s/^  "mtl" = true;$/  "mtl" = ${{ matrix.flag-mtl }};/g' --in-place flags.nix
        sed --expression='s/^  "primitive" = true;$/  "primitive" = ${{ matrix.flag-primitive }};/g' --in-place flags.nix
        sed --expression='s/^  "random" = true;$/  "random" = ${{ matrix.flag-random }};/g' --in-place flags.nix
        sed --expression='s/^  "resourcet" = true;$/  "resourcet" = ${{ matrix.flag-resourcet }};/g' --in-place flags.nix
        sed --expression='s/^  "unliftio" = true;$/  "unliftio" = ${{ matrix.flag-unliftio }};/g' --in-place flags.nix
        cat flags.nix
    - name: "Build"
      run: nix build --print-build-logs .\#${{ matrix.output }}
  check:
    name: "Check Flake"
    runs-on: ubuntu-latest
    steps:
    - name: "Set up GitHub Actions"
      uses: actions/checkout@v3.0.2
    - name: "Set up Nix"
      uses: cachix/install-nix-action@v17
    - name: "Set up Cachix"
      uses: cachix/cachix-action@v12
      with:
        name: jumper149-deriving-trans
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "Check"
      run: nix flake check --keep-going --print-build-logs
