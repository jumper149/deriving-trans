name: "Default"
on:
  push:
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flag-exceptions: [ false ]
        flag-logict: [ false ]
        flag-mtl: [ false ]
        flag-primitive: [ false ]
        flag-random: [ false ]
        flag-resourcet: [ false ]
        flag-unliftio: [ false ]
        include:
          - output: packages.x86_64-linux.default
            flag-exceptions: true
          - output: packages.x86_64-linux.default
            flag-logict: true
          - output: packages.x86_64-linux.default
            flag-mtl: true
          - output: packages.x86_64-linux.default
            flag-primitive: true
          - output: packages.x86_64-linux.default
            flag-random: true
          - output: packages.x86_64-linux.default
            flag-resourcet: true
          - output: packages.x86_64-linux.default
            flag-unliftio: true
          - output:
              [ packages.x86_64-linux.default
              , devShells.x86_64-linux.default
              , checks.x86_64-linux.warning
              ]
            flag-exceptions: true
            flag-logict: true
            flag-mtl: true
            flag-primitive: true
            flag-random: true
            flag-resourcet: true
            flag-unliftio: true
    steps:
    - name: "Set up GitHub Actions"
      uses: actions/checkout@v3.3.0
    - name: "Set up Nix"
      uses: cachix/install-nix-action@v18
    - name: "Set up Cachix"
      uses: cachix/cachix-action@v12
      with:
        name: jumper149-deriving-trans
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "Set Cabal flags"
      run: |
        sed --expression='s/^  "exceptions" = true;$/  "exceptions" = ${{ matrix.flag-exceptions }};/g' --in-place flags.nix
        sed --expression='s/^  "logict" = true;$/  "logict" = ${{ matrix.flag-logict }};/g' --in-place flags.nix
        sed --expression='s/^  "mtl" = true;$/  "mtl" = ${{ matrix.flag-mtl }};/g' --in-place flags.nix
        sed --expression='s/^  "primitive" = true;$/  "primitive" = ${{ matrix.flag-primitive }};/g' --in-place flags.nix
        sed --expression='s/^  "random" = true;$/  "random" = ${{ matrix.flag-random }};/g' --in-place flags.nix
        sed --expression='s/^  "resourcet" = true;$/  "resourcet" = ${{ matrix.flag-resourcet }};/g' --in-place flags.nix
        sed --expression='s/^  "unliftio" = true;$/  "unliftio" = ${{ matrix.flag-unliftio }};/g' --in-place flags.nix
        cat flags.nix
    - name: "Build"
      run: nix build --print-build-logs .\#${{ matrix.output }}
  check:
    name: "Check Flake"
    runs-on: ubuntu-latest
    steps:
    - name: "Set up GitHub Actions"
      uses: actions/checkout@v3.3.0
    - name: "Set up Nix"
      uses: cachix/install-nix-action@v18
    - name: "Set up Cachix"
      uses: cachix/cachix-action@v12
      with:
        name: jumper149-deriving-trans
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: "Check"
      run: nix flake check --keep-going --print-build-logs
